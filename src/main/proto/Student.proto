syntax = "proto3";

//  Protobuf 消息、服务等定义的逻辑命名空间，这个命名空间主要用于在 Protobuf 内部避免命名冲突
package com.example.grpc.proto;

// 指定了生成的类所在的包名，.proto 文件编译成Java代码时，生成的类会被放置在option java_package指定的包中
option java_package = "com.example.grpc.proto.bean";
// 指定外部类名，否则以文件名生成外部类名
option java_outer_classname = "Student";
// 每个消息生成一个独立的类，否则作为内部类放到外部类中
option java_multiple_files = true;

message MyRequest {
  string username = 1;
}

message MyResponse {
  string realname = 2;
}

message StudentRequest {
  int32 age = 1;
}

message StudentResponse {
  string name = 1;
  int32 age = 2;
  string city = 3;
}

message StudentResponseList {
  repeated StudentResponse studentResponse = 1;
}

message StreamRequest {
  string request_info = 1;
}

message StreamResponse {
  string request_info = 1;
}

// 方法名不能和类名一样
service StudentService {

  rpc GetRealNameByUsername(com.example.grpc.proto.MyRequest) returns (com.example.grpc.proto.MyResponse) {}

  rpc GetStudentByAge(StudentRequest) returns (stream StudentResponse) {}

  rpc GetStudentListByAges(stream StudentRequest) returns (StudentResponseList) {}

  rpc BiTalk(stream StreamRequest) returns (stream StreamResponse) {};
}